<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="API_Automation_Testing_Using_Jmeter_Keyword_Driven_Framework">
      <stringProp name="TestPlan.comments">API_Automation_Testing_Using_Jmeter_Keyword_Driven_Framework</stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Generic" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Environment" elementType="Argument">
            <stringProp name="Argument.name">Environment</stringProp>
            <stringProp name="Argument.value">${__P(Environment)}</stringProp>
            <stringProp name="Argument.desc">jmeter -JEnvironment=Dev    (Pie,Stage)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timeDelay" elementType="Argument">
            <stringProp name="Argument.name">timeDelay</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="shellFileDirectory" elementType="Argument">
            <stringProp name="Argument.name">shellFileDirectory</stringProp>
            <stringProp name="Argument.value">/home/rishi/jmeter/jmeter/bin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Base_Dir_Path" elementType="Argument">
            <stringProp name="Argument.name">Base_Dir_Path</stringProp>
            <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DC" elementType="Argument">
            <stringProp name="Argument.name">DC</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fetch_Create" elementType="Argument">
            <stringProp name="Argument.name">Fetch_Create</stringProp>
            <stringProp name="Argument.value">gekko-dev.tropos-rnd.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fetch_TokenURL_Dev" elementType="Argument">
            <stringProp name="Argument.name">Fetch_TokenURL_Dev</stringProp>
            <stringProp name="Argument.value">dev.subscriptions.api.hp.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fetch_ClientID_Dev" elementType="Argument">
            <stringProp name="Argument.name">Fetch_ClientID_Dev</stringProp>
            <stringProp name="Argument.value">eiS5JSBddm77GnMFSLS4AueT2ZoIdwbE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fetch_Secret_Dev" elementType="Argument">
            <stringProp name="Argument.name">Fetch_Secret_Dev</stringProp>
            <stringProp name="Argument.value">pbWIeb7LMyJuQpzImUGvHIukL7f1uwJW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fetch_BaseURL" elementType="Argument">
            <stringProp name="Argument.name">Fetch_BaseURL</stringProp>
            <stringProp name="Argument.value">https://dev.subscriptions.api.hp.com/oauth/v1/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Notifications_Version" elementType="Argument">
            <stringProp name="Argument.name">API_Notifications_Version</stringProp>
            <stringProp name="Argument.value">/api/notifications/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Version" elementType="Argument">
            <stringProp name="Argument.name">API_Version</stringProp>
            <stringProp name="Argument.value">api</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PO_DC" elementType="Argument">
            <stringProp name="Argument.name">PO_DC</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fetch_Token_Dev" elementType="Argument">
            <stringProp name="Argument.name">Fetch_Token_Dev</stringProp>
            <stringProp name="Argument.value">dev.subscriptions.api.hp.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RenewalDate" elementType="Argument">
            <stringProp name="Argument.name">RenewalDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P366D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="InvoiceDate" elementType="Argument">
            <stringProp name="Argument.name">InvoiceDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NextbillDate" elementType="Argument">
            <stringProp name="Argument.name">NextbillDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P366D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CPRenewalDate" elementType="Argument">
            <stringProp name="Argument.name">CPRenewalDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P30D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CPNextbillDate" elementType="Argument">
            <stringProp name="Argument.name">CPNextbillDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P30D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Invoice_Failure_Date" elementType="Argument">
            <stringProp name="Argument.name">Invoice_Failure_Date</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,-P5D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="soldToBpId" elementType="Argument">
            <stringProp name="Argument.name">soldToBpId</stringProp>
            <stringProp name="Argument.value">9002027524</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="shipToBpId" elementType="Argument">
            <stringProp name="Argument.name">shipToBpId</stringProp>
            <stringProp name="Argument.value">9002027524</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCToken_VISA" elementType="Argument">
            <stringProp name="Argument.name">CCToken_VISA</stringProp>
            <stringProp name="Argument.value">4966fe87f9f04eba977730f1b27858c44113</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCSignature_VISA" elementType="Argument">
            <stringProp name="Argument.name">CCSignature_VISA</stringProp>
            <stringProp name="Argument.value">17947e9531a3423e93235bba791c4bca</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardType_VISA" elementType="Argument">
            <stringProp name="Argument.name">CardType_VISA</stringProp>
            <stringProp name="Argument.value">001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCToken_AMEX" elementType="Argument">
            <stringProp name="Argument.name">CCToken_AMEX</stringProp>
            <stringProp name="Argument.value">3f7424c07d604c768d9f490b73500f711347</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCSignature_AMEX" elementType="Argument">
            <stringProp name="Argument.name">CCSignature_AMEX</stringProp>
            <stringProp name="Argument.value">2a9b935674f644849ca6c59780b7e273</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardType_AMEX" elementType="Argument">
            <stringProp name="Argument.name">CardType_AMEX</stringProp>
            <stringProp name="Argument.value">003</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCToken_Discover" elementType="Argument">
            <stringProp name="Argument.name">CCToken_Discover</stringProp>
            <stringProp name="Argument.value">57d79388682a4802a6fc9f03e11af1976557 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCSignature_Discover" elementType="Argument">
            <stringProp name="Argument.name">CCSignature_Discover</stringProp>
            <stringProp name="Argument.value">2cce817e0ce54662a092bdce7a92af95</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardType_Discover" elementType="Argument">
            <stringProp name="Argument.name">CardType_Discover</stringProp>
            <stringProp name="Argument.value">004</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCToken_MasterCard" elementType="Argument">
            <stringProp name="Argument.name">CCToken_MasterCard</stringProp>
            <stringProp name="Argument.value">53eead0df7314cf29a30be05acf7b2534444</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCSignature_MasterCard" elementType="Argument">
            <stringProp name="Argument.name">CCSignature_MasterCard</stringProp>
            <stringProp name="Argument.value">cb81efb5430b472abf22e5cd0f118603</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardType_MasterCard" elementType="Argument">
            <stringProp name="Argument.name">CardType_MasterCard</stringProp>
            <stringProp name="Argument.value">002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FuturePaymentDueDate" elementType="Argument">
            <stringProp name="Argument.name">FuturePaymentDueDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P30D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PastPaymentDueDate" elementType="Argument">
            <stringProp name="Argument.name">PastPaymentDueDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P-30D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PastPaymentDueDate_5Days" elementType="Argument">
            <stringProp name="Argument.name">PastPaymentDueDate_5Days</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P-5D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">dev: dev.subscriptions.api.hp.com PIE: test.subscriptions.api.hp.com</stringProp>
      </Arguments>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Master Test Fragment"/>
      <hashTree>
        <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="Switch Controller">
          <stringProp name="SwitchController.value">${actionVar}</stringProp>
        </SwitchController>
        <hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="GET_Calls">
            <stringProp name="TestPlan.comments">MD001</stringProp>
            <stringProp name="IncludeController.includepath">Test_Files\GET_Calls.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Post_Calls">
            <stringProp name="TestPlan.comments">MD002</stringProp>
            <stringProp name="IncludeController.includepath">Test_Files\Post_Calls.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Master_Execution_Engine" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Users/arvind.pareek/Documents/GitHub/API_Automation_Testing_Using_Jmeter_Keyword-Driven_Framework/Keyword_CSV_File/Master_Controller.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Production Monitoring Debug Sampler- Executing ${ModuleId} -- Keywords: ${__split(${keywords},keyword,;)}">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">keyword</stringProp>
          <stringProp name="ForeachController.returnVal">action</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
          <stringProp name="ForeachController.startIndex">0</stringProp>
          <stringProp name="ForeachController.endIndex">100</stringProp>
        </ForeachController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - set newAction" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">vars.put(&quot;newAction&quot;,vars.get(&quot;action&quot;));
SampleResult.setIgnore();</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__groovy(&quot;${newAction}&quot;.contains(&quot;SignIn&quot;))}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String keyword = vars.get(&quot;newAction&quot;);
String[] keys = keyword.split(&quot; &quot;);
vars.put(&quot;userType&quot;,keys[2]);
vars.put(&quot;newAction&quot;,keys[0]+&quot; &quot;+keys[1]);</stringProp>
            </JSR223Sampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">prev.setIgnore();</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - set acrtionVar" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put(&quot;actionVar&quot;,vars.get(&quot;newAction&quot;));
SampleResult.setIgnore();</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller_Target to Switch Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1437215540">API_Automation_Testing_Using_Jmeter_Keyword_Driven_Framework</stringProp>
              <stringProp name="-1143220992">Master Test Fragment</stringProp>
              <stringProp name="-878946296">Switch Controller</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller for Prod Env">
          <stringProp name="TestPlan.comments">BaseURL	${__P(BaseURL)}	,Apigee_IP	dev.subscriptions.api.hp.com</stringProp>
          <stringProp name="IfController.condition">${__groovy(vars.get(&quot;Environment&quot;) == &quot;Prod&quot; )}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Generic for Prod Env" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Environment" elementType="Argument">
                <stringProp name="Argument.name">Environment</stringProp>
                <stringProp name="Argument.value">Prod</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller for Qa Env" enabled="false">
          <stringProp name="TestPlan.comments">BaseURL	${__P(BaseURL)}	,Apigee_IP	dev.subscriptions.api.hp.com</stringProp>
          <stringProp name="IfController.condition">${__groovy(vars.get(&quot;Environment&quot;) == &quot;Pie&quot; )}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Generic" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Environment" elementType="Argument">
                <stringProp name="Argument.name">Environment</stringProp>
                <stringProp name="Argument.value">PIE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="timeDelay" elementType="Argument">
                <stringProp name="Argument.name">timeDelay</stringProp>
                <stringProp name="Argument.value">5000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="port" elementType="Argument">
                <stringProp name="Argument.name">port</stringProp>
                <stringProp name="Argument.value">443</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="shellFileDirectory" elementType="Argument">
                <stringProp name="Argument.name">shellFileDirectory</stringProp>
                <stringProp name="Argument.value">/home/rishi/jmeter/jmeter/bin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CONFIG_PATH" elementType="Argument">
                <stringProp name="Argument.name">CONFIG_PATH</stringProp>
                <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID" elementType="Argument">
                <stringProp name="Argument.name">ClientID</stringProp>
                <stringProp name="Argument.value">f0wHAjLtudfCelImkOS8nXxTvzCXAPBO</stringProp>
                <stringProp name="Argument.desc">2EG7KM5wfFjAXavKpbCvYEChpcKCqjD3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID" elementType="Argument">
                <stringProp name="Argument.name">SecretID</stringProp>
                <stringProp name="Argument.value">XYuee6Xe4DSj0rWouo7DBnk3KjPY2VS6</stringProp>
                <stringProp name="Argument.desc">ED7h4SPoDg5aZYH6uJmYgxCCD7Dvgc7E</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="BaseURL" elementType="Argument">
                <stringProp name="Argument.name">BaseURL</stringProp>
                <stringProp name="Argument.value">https://test.subscriptions.api.hp.com/oauth/v1/</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Apigee_IP" elementType="Argument">
                <stringProp name="Argument.name">Apigee_IP</stringProp>
                <stringProp name="Argument.value">test.subscriptions.api.hp.com</stringProp>
                <stringProp name="Argument.desc">dev: dev.subscriptions.api.hp.com PIE: test.subscriptions.api.hp.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_Store" elementType="Argument">
                <stringProp name="Argument.name">ClientID_Store</stringProp>
                <stringProp name="Argument.value">Rcgfw8ksPS6lezUKGuE5VGpgG1CLe8WA</stringProp>
                <stringProp name="Argument.desc">ClientId Dev Env for Notifications_GET</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GET_API_IP" elementType="Argument">
                <stringProp name="Argument.name">GET_API_IP</stringProp>
                <stringProp name="Argument.value">gekko-pie.tropos-rnd.com</stringProp>
                <stringProp name="Argument.desc">gekko-pie.tropos-rnd.com  gekko-stg.tropos-rnd.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Report" elementType="Argument">
                <stringProp name="Argument.name">Report</stringProp>
                <stringProp name="Argument.value">PIE_Regression_${__timeShift(MM-dd-yyyy-HHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_Email" elementType="Argument">
                <stringProp name="Argument.name">ClientID_Email</stringProp>
                <stringProp name="Argument.value">XXpIpFvfBHjr4xdGK8GBtUtXOtyUwCEv</stringProp>
                <stringProp name="Argument.desc">Notification Service</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_Email" elementType="Argument">
                <stringProp name="Argument.name">SecretID_Email</stringProp>
                <stringProp name="Argument.value">6jlQXTGDdP5qWHRt6KpILQPxs7daFXOn</stringProp>
                <stringProp name="Argument.desc">Notification Service</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SenderBusinessSystemID" elementType="Argument">
                <stringProp name="Argument.name">SenderBusinessSystemID</stringProp>
                <stringProp name="Argument.value">GEKKO-PIE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_FO" elementType="Argument">
                <stringProp name="Argument.name">ClientID_FO</stringProp>
                <stringProp name="Argument.value">f0wHAjLtudfCelImkOS8nXxTvzCXAPBO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Secret_FO" elementType="Argument">
                <stringProp name="Argument.name">Secret_FO</stringProp>
                <stringProp name="Argument.value">vgONShTL2KwVTf071yyuHwS7TyjYVZUy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Demo_ClientID" elementType="Argument">
                <stringProp name="Argument.name">Demo_ClientID</stringProp>
                <stringProp name="Argument.value">1L9SX53u5f724f3XZB5223c4NsGUtDqe</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Demo_SecretID" elementType="Argument">
                <stringProp name="Argument.name">Demo_SecretID</stringProp>
                <stringProp name="Argument.value">W19B03mGOnofznZAkRblyHqiE30bQHam</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">1rZaivhQHljUrM8SlBoqG0Yuh8neeedP    Vr3t1ubKYcqYNSDS6fhJmY7slqTekyX2</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Order_Processing" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Order_ID" elementType="Argument">
                <stringProp name="Argument.name">Order_ID</stringProp>
                <stringProp name="Argument.value">PIE${__timeShift(ddMMyyyyHHmmssSSS,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">To get a unique value of Order ID </stringProp>
              </elementProp>
              <elementProp name="Unique_ID" elementType="Argument">
                <stringProp name="Argument.name">Unique_ID</stringProp>
                <stringProp name="Argument.value">${__Random(10000,999999)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_token" elementType="Argument">
                <stringProp name="Argument.name">invalid_token</stringProp>
                <stringProp name="Argument.value">rfedfdsferedgdsd</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="FName" elementType="Argument">
                <stringProp name="Argument.name">FName</stringProp>
                <stringProp name="Argument.value">Gekko${__RandomString(3,ABCDEFGHIJKLMN)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="LName" elementType="Argument">
                <stringProp name="Argument.name">LName</stringProp>
                <stringProp name="Argument.value">Test${__RandomString(3,ABCDEFGHIJKLMN)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="email" elementType="Argument">
                <stringProp name="Argument.name">email</stringProp>
                <stringProp name="Argument.value">qapietest${__Random(001,99999)}@YOPmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Customer_HPID" elementType="Argument">
                <stringProp name="Argument.name">Customer_HPID</stringProp>
                <stringProp name="Argument.value">HPID-${__timeShift(ddMMyyyyHHmmssSSS,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Exist_HPID" elementType="Argument">
                <stringProp name="Argument.name">Exist_HPID</stringProp>
                <stringProp name="Argument.value">JMeter-ExistingHPID-001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="incorrect_HPID" elementType="Argument">
                <stringProp name="Argument.name">incorrect_HPID</stringProp>
                <stringProp name="Argument.value">HPID-O16810</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Customer_HPID_MultipleSub" elementType="Argument">
                <stringProp name="Argument.name">Customer_HPID_MultipleSub</stringProp>
                <stringProp name="Argument.value">NA08092101</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">HpId from TestData.jmx</stringProp>
              </elementProp>
              <elementProp name="OrderId_MultipleSub" elementType="Argument">
                <stringProp name="Argument.name">OrderId_MultipleSub</stringProp>
                <stringProp name="Argument.value">H341780193</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">OrderId from TestData.jmx</stringProp>
              </elementProp>
              <elementProp name="SubId_fromMutipleSub" elementType="Argument">
                <stringProp name="Argument.name">SubId_fromMutipleSub</stringProp>
                <stringProp name="Argument.value">315</stringProp>
                <stringProp name="Argument.desc">SubscriptionId generated from TestData.jmx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="LicenseKey" elementType="Argument">
                <stringProp name="Argument.name">LicenseKey</stringProp>
                <stringProp name="Argument.value">UAAYYDDE9UCJ</stringProp>
                <stringProp name="Argument.desc">subscription_key_value generated from TestData.jmx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Subscription_Start_Date" elementType="Argument">
                <stringProp name="Argument.name">Subscription_Start_Date</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;+00:00&apos;,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Subscription_End_Date" elementType="Argument">
                <stringProp name="Argument.name">Subscription_End_Date</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;+00:00&apos;,,P364D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="External_RefID" elementType="Argument">
                <stringProp name="Argument.name">External_RefID</stringProp>
                <stringProp name="Argument.value">000000000${__Random(001,999)}${__timeShift(ddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ContractAcc_ID" elementType="Argument">
                <stringProp name="Argument.name">ContractAcc_ID</stringProp>
                <stringProp name="Argument.value">${__Random(0000001,99999999)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Timestamp_Old" elementType="Argument">
                <stringProp name="Argument.name">Timestamp_Old</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P-120D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Timestamp_Old_BRIM" elementType="Argument">
                <stringProp name="Argument.name">Timestamp_Old_BRIM</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P-120D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invoice_CreateDate" elementType="Argument">
                <stringProp name="Argument.name">Invoice_CreateDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invoice_SubscriptionEndDate" elementType="Argument">
                <stringProp name="Argument.name">Invoice_SubscriptionEndDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P200D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invoice_Email" elementType="Argument">
                <stringProp name="Argument.name">Invoice_Email</stringProp>
                <stringProp name="Argument.value">gekkoqa_invoice_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PO_Number" elementType="Argument">
                <stringProp name="Argument.name">PO_Number</stringProp>
                <stringProp name="Argument.value">test${__Random(1,1000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PO_BPID" elementType="Argument">
                <stringProp name="Argument.name">PO_BPID</stringProp>
                <stringProp name="Argument.value">test${__Random(1,1000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_sku" elementType="Argument">
                <stringProp name="Argument.name">ext_sku</stringProp>
                <stringProp name="Argument.value">U33T3AHB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MLS_email" elementType="Argument">
                <stringProp name="Argument.name">MLS_email</stringProp>
                <stringProp name="Argument.value">gekkoqamls_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_demo" elementType="Argument">
                <stringProp name="Argument.name">Send_email_demo</stringProp>
                <stringProp name="Argument.value">gekko_demo_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_sf" elementType="Argument">
                <stringProp name="Argument.name">Send_email_sf</stringProp>
                <stringProp name="Argument.value">gekko_sf_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_wps" elementType="Argument">
                <stringProp name="Argument.name">Send_email_wps</stringProp>
                <stringProp name="Argument.value">gekko_wps_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_wex" elementType="Argument">
                <stringProp name="Argument.name">Send_email_wex</stringProp>
                <stringProp name="Argument.value">gekko_wex_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables_Cancel-Subscription" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="invalid-token" elementType="Argument">
                <stringProp name="Argument.name">invalid-token</stringProp>
                <stringProp name="Argument.value">hkgkjgjkgjkgkjgk</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invalid_HPID" elementType="Argument">
                <stringProp name="Argument.name">Invalid_HPID</stringProp>
                <stringProp name="Argument.value">..12-abc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invalid_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">Invalid_Subscription_ID</stringProp>
                <stringProp name="Argument.value">..12-abcde</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="NotMapped_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">NotMapped_Subscription_ID</stringProp>
                <stringProp name="Argument.value">998</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_Date" elementType="Argument">
                <stringProp name="Argument.name">Cancel_Date</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">invalid_Subscription_ID</stringProp>
                <stringProp name="Argument.value">25</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_HPID" elementType="Argument">
                <stringProp name="Argument.name">invalid_HPID</stringProp>
                <stringProp name="Argument.value">P020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_CilentID" elementType="Argument">
                <stringProp name="Argument.name">invalid_CilentID</stringProp>
                <stringProp name="Argument.value">invalid_CilentID</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_EffectiveDate" elementType="Argument">
                <stringProp name="Argument.name">Cancel_EffectiveDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P59D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_EffectiveDate15D" elementType="Argument">
                <stringProp name="Argument.name">Cancel_EffectiveDate15D</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P15D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_EffectiveDate100D" elementType="Argument">
                <stringProp name="Argument.name">Cancel_EffectiveDate100D</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P100D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Paymment_Reminder_Date" elementType="Argument">
                <stringProp name="Argument.name">Paymment_Reminder_Date</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P5D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Carepacks" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="CPOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPOrder_ID</stringProp>
                <stringProp name="Argument.value">CP${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber" elementType="Argument">
                <stringProp name="Argument.name">SrNumber</stringProp>
                <stringProp name="Argument.value">SRPIE${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber2" elementType="Argument">
                <stringProp name="Argument.name">SrNumber2</stringProp>
                <stringProp name="Argument.value">SRPIEMT${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber1" elementType="Argument">
                <stringProp name="Argument.name">SrNumber1</stringProp>
                <stringProp name="Argument.value">SRPIEMO${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPFOOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPFOOrder_ID</stringProp>
                <stringProp name="Argument.value">CPFO${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumberFO" elementType="Argument">
                <stringProp name="Argument.name">SrNumberFO</stringProp>
                <stringProp name="Argument.value">SRFO${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPHWUpdateOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPHWUpdateOrder_ID</stringProp>
                <stringProp name="Argument.value">CPHWUp${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumberHWUpdate" elementType="Argument">
                <stringProp name="Argument.name">SrNumberHWUpdate</stringProp>
                <stringProp name="Argument.value">HW${__timeShift(MMddHHmm,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_cp" elementType="Argument">
                <stringProp name="Argument.name">Send_email_cp</stringProp>
                <stringProp name="Argument.value">gekko_cp_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_cpstd" elementType="Argument">
                <stringProp name="Argument.name">Send_email_cpstd</stringProp>
                <stringProp name="Argument.value">gekko_cpstd_pie@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPSTD_HW_SR_NO" elementType="Argument">
                <stringProp name="Argument.name">CPSTD_HW_SR_NO</stringProp>
                <stringProp name="Argument.value">HWSrNo${__timeShift(YYMMddHHmm,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPEVOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPEVOrder_ID</stringProp>
                <stringProp name="Argument.value">CPEV${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber3" elementType="Argument">
                <stringProp name="Argument.name">SrNumber3</stringProp>
                <stringProp name="Argument.value">SRPIEEV${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumberFO1" elementType="Argument">
                <stringProp name="Argument.name">SrNumberFO1</stringProp>
                <stringProp name="Argument.value">SRPIEFO${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber4" elementType="Argument">
                <stringProp name="Argument.name">SrNumber4</stringProp>
                <stringProp name="Argument.value">SRPIECFE${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPCFEOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPCFEOrder_ID</stringProp>
                <stringProp name="Argument.value">CPCFE${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CurrentCancelDate" elementType="Argument">
                <stringProp name="Argument.name">CurrentCancelDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="EstimatedDeliveryDate" elementType="Argument">
                <stringProp name="Argument.name">EstimatedDeliveryDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P-60D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber5" elementType="Argument">
                <stringProp name="Argument.name">SrNumber5</stringProp>
                <stringProp name="Argument.value">SRPIECWFE${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPCWFEOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPCWFEOrder_ID</stringProp>
                <stringProp name="Argument.value">CPCWFE${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">localhost:8080/catalogs/price-plans</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables_Payment_History" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="invalid-token" elementType="Argument">
                <stringProp name="Argument.name">invalid-token</stringProp>
                <stringProp name="Argument.value">hkgkjgjkgjkgkjgk</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">12-ase</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_HPID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_HPID</stringProp>
                <stringProp name="Argument.value">HPID-940494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Subscription_ID</stringProp>
                <stringProp name="Argument.value">337</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Invalid_HPID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Invalid_HPID</stringProp>
                <stringProp name="Argument.value">..12-abc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Invalid_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Invalid_Subscription_ID</stringProp>
                <stringProp name="Argument.value">908933</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_HPID_10Rec" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_HPID_10Rec</stringProp>
                <stringProp name="Argument.value">HPID-940494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Subscription_ID_10Rec" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Subscription_ID_10Rec</stringProp>
                <stringProp name="Argument.value">337</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo_0" elementType="Argument">
                <stringProp name="Argument.name">pageNo_0</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Subscription_ID_NoRec" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Subscription_ID_NoRec</stringProp>
                <stringProp name="Argument.value">989</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">localhost:8080/catalogs/price-plans</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables_DataParser_Argon" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="DP_OrderID" elementType="Argument">
                <stringProp name="Argument.name">DP_OrderID</stringProp>
                <stringProp name="Argument.value">${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Arg_OrderID" elementType="Argument">
                <stringProp name="Argument.name">Arg_OrderID</stringProp>
                <stringProp name="Argument.value">${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_Argon" elementType="Argument">
                <stringProp name="Argument.name">ClientID_Argon</stringProp>
                <stringProp name="Argument.value">DRK0xwfJHJowsMciNYbQRMwWqk56zDpB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Secret_Argon" elementType="Argument">
                <stringProp name="Argument.name">Secret_Argon</stringProp>
                <stringProp name="Argument.value">zwjf2Kfn2IbdxBcYDrGXz9o8CniIVPoB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tenant_id" elementType="Argument">
                <stringProp name="Argument.name">tenant_id</stringProp>
                <stringProp name="Argument.value">Tenant-${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="New_email" elementType="Argument">
                <stringProp name="Argument.name">New_email</stringProp>
                <stringProp name="Argument.value">Update_Argon${__timeShift(MMddHHmmss,,,,)}@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Country_Code" elementType="Argument">
                <stringProp name="Argument.name">Country_Code</stringProp>
                <stringProp name="Argument.value">${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="File_Type" elementType="Argument">
                <stringProp name="Argument.name">File_Type</stringProp>
                <stringProp name="Argument.value">${__Random(1,3,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">gekko-dev.tropos-rnd.com/commerce-controller/v1/customer/${id}/order</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-DSP" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ClientID_DSP" elementType="Argument">
                <stringProp name="Argument.name">ClientID_DSP</stringProp>
                <stringProp name="Argument.value">Oufdp33ybGlmbY8rlvETnH8cz6Z4WX00</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_DSP" elementType="Argument">
                <stringProp name="Argument.name">SecretID_DSP</stringProp>
                <stringProp name="Argument.value">4kAofwhk723LBpCUHnr7oVRWcMYFDiKC</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_DSP_Notification" elementType="Argument">
                <stringProp name="Argument.name">ClientID_DSP_Notification</stringProp>
                <stringProp name="Argument.value">Oufdp33ybGlmbY8rlvETnH8cz6Z4WX00</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_DSP_Notification" elementType="Argument">
                <stringProp name="Argument.name">SecretID_DSP_Notification</stringProp>
                <stringProp name="Argument.value">4kAofwhk723LBpCUHnr7oVRWcMYFDiKC</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_DSP_Mock" elementType="Argument">
                <stringProp name="Argument.name">ClientID_DSP_Mock</stringProp>
                <stringProp name="Argument.value">Gsv1eCfZGqxMXzJ6O3RXy7WA5ZmFWfaM</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_DSP_Mock" elementType="Argument">
                <stringProp name="Argument.name">SecretID_DSP_Mock</stringProp>
                <stringProp name="Argument.value">h9w7ap7HfPu4qKErLaIDLJCI11C6RF3V</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller for Dev Env" enabled="false">
          <stringProp name="TestPlan.comments">&quot;Apigee_IP&quot;==&quot;dev.subscriptions.api.hp.com&quot;</stringProp>
          <stringProp name="IfController.condition">${__groovy(vars.get(&quot;Environment&quot;) == &quot;Dev&quot; )}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Generic" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Environment" elementType="Argument">
                <stringProp name="Argument.name">Environment</stringProp>
                <stringProp name="Argument.value">DEV</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="timeDelay" elementType="Argument">
                <stringProp name="Argument.name">timeDelay</stringProp>
                <stringProp name="Argument.value">5000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="port" elementType="Argument">
                <stringProp name="Argument.name">port</stringProp>
                <stringProp name="Argument.value">443</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="shellFileDirectory" elementType="Argument">
                <stringProp name="Argument.name">shellFileDirectory</stringProp>
                <stringProp name="Argument.value">/home/rishi/jmeter/jmeter/bin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CONFIG_PATH" elementType="Argument">
                <stringProp name="Argument.name">CONFIG_PATH</stringProp>
                <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID" elementType="Argument">
                <stringProp name="Argument.name">ClientID</stringProp>
                <stringProp name="Argument.value">eiS5JSBddm77GnMFSLS4AueT2ZoIdwbE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">eFHgUWNG9rVfC304EAY7usickxx1AgqZ</stringProp>
              </elementProp>
              <elementProp name="SecretID" elementType="Argument">
                <stringProp name="Argument.name">SecretID</stringProp>
                <stringProp name="Argument.value">77Kn0tIiuFCboy1S0r2dhpHJAnzTEmOh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">BOLH5C91j74akTaIWxXweIEir1jhixDr</stringProp>
              </elementProp>
              <elementProp name="BaseURL" elementType="Argument">
                <stringProp name="Argument.name">BaseURL</stringProp>
                <stringProp name="Argument.value">https://dev.subscriptions.api.hp.com/oauth/v1/</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Apigee_IP" elementType="Argument">
                <stringProp name="Argument.name">Apigee_IP</stringProp>
                <stringProp name="Argument.value">dev.subscriptions.api.hp.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">dev: dev.subscriptions.api.hp.com PIE: test.subscriptions.api.hp.com</stringProp>
              </elementProp>
              <elementProp name="ClientID_Store" elementType="Argument">
                <stringProp name="Argument.name">ClientID_Store</stringProp>
                <stringProp name="Argument.value">hv0ZtRz46c0zpe5hH8GRYwGiS0mcG7Kp</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">ClientId Dev Env for Notifications_GET</stringProp>
              </elementProp>
              <elementProp name="GET_API_IP" elementType="Argument">
                <stringProp name="Argument.name">GET_API_IP</stringProp>
                <stringProp name="Argument.value">gekko-dev.tropos-rnd.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Report" elementType="Argument">
                <stringProp name="Argument.name">Report</stringProp>
                <stringProp name="Argument.value">Regression_Dev_${__timeShift(MM-dd-yyyy-HHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="API_Version" elementType="Argument">
                <stringProp name="Argument.name">API_Version</stringProp>
                <stringProp name="Argument.value">api</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="API_Notifications_Version" elementType="Argument">
                <stringProp name="Argument.name">API_Notifications_Version</stringProp>
                <stringProp name="Argument.value">/api/notifications/v1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_PO" elementType="Argument">
                <stringProp name="Argument.name">ClientID_PO</stringProp>
                <stringProp name="Argument.value">eFHgUWNG9rVfC304EAY7usickxx1AgqZ</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_PO" elementType="Argument">
                <stringProp name="Argument.name">SecretID_PO</stringProp>
                <stringProp name="Argument.value">txDwPhzCptlOXYoVmfumrvwp8yyUUCBb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SenderBusinessSystemID" elementType="Argument">
                <stringProp name="Argument.name">SenderBusinessSystemID</stringProp>
                <stringProp name="Argument.value">GEKKO-DEV</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_FO" elementType="Argument">
                <stringProp name="Argument.name">ClientID_FO</stringProp>
                <stringProp name="Argument.value">eiS5JSBddm77GnMFSLS4AueT2ZoIdwbE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">KIDX7lAa10KnnnKgk1SrN17YHTTeiA2e</stringProp>
              </elementProp>
              <elementProp name="Secret_FO" elementType="Argument">
                <stringProp name="Argument.name">Secret_FO</stringProp>
                <stringProp name="Argument.value">77Kn0tIiuFCboy1S0r2dhpHJAnzTEmOh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">8363HHU63E0wOlAgYQy62umIHCYHD1yo</stringProp>
              </elementProp>
              <elementProp name="Demo_ClientID" elementType="Argument">
                <stringProp name="Argument.name">Demo_ClientID</stringProp>
                <stringProp name="Argument.value">kOPijIVVrPjgzGDcc2IRM3V4C2AvpQVa</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Demo_SecretID" elementType="Argument">
                <stringProp name="Argument.name">Demo_SecretID</stringProp>
                <stringProp name="Argument.value">3SG8vHjEEwPNC1HhU9gPlSigkWIPsZZC</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">dev: dev.subscriptions.api.hp.com PIE: test.subscriptions.api.hp.com</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Order_Processing" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Order_ID" elementType="Argument">
                <stringProp name="Argument.name">Order_ID</stringProp>
                <stringProp name="Argument.value">${Environment}${__timeShift(YYMMHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">To get a unique value of Order ID </stringProp>
              </elementProp>
              <elementProp name="Unique_ID" elementType="Argument">
                <stringProp name="Argument.name">Unique_ID</stringProp>
                <stringProp name="Argument.value">${__Random(10000,999999)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_token" elementType="Argument">
                <stringProp name="Argument.name">invalid_token</stringProp>
                <stringProp name="Argument.value">rfedfdsferedgdsd</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="FName" elementType="Argument">
                <stringProp name="Argument.name">FName</stringProp>
                <stringProp name="Argument.value">Gekko${__RandomString(3,ABCDEFGHIJKLMN)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="LName" elementType="Argument">
                <stringProp name="Argument.name">LName</stringProp>
                <stringProp name="Argument.value">Test${__RandomString(3,ABCDEFGHIJKLMN)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="email" elementType="Argument">
                <stringProp name="Argument.name">email</stringProp>
                <stringProp name="Argument.value">qadevtest${__Random(001,999)}@YOPmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Customer_HPID" elementType="Argument">
                <stringProp name="Argument.name">Customer_HPID</stringProp>
                <stringProp name="Argument.value">HPID-${__Random(10000,999999)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Exist_HPID" elementType="Argument">
                <stringProp name="Argument.name">Exist_HPID</stringProp>
                <stringProp name="Argument.value">JMeter-ExistingHPID-001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="incorrect_HPID" elementType="Argument">
                <stringProp name="Argument.name">incorrect_HPID</stringProp>
                <stringProp name="Argument.value">HPID-O16810</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Customer_HPID_MultipleSub" elementType="Argument">
                <stringProp name="Argument.name">Customer_HPID_MultipleSub</stringProp>
                <stringProp name="Argument.value">NA08092101</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">HpId from TestData.jmx</stringProp>
              </elementProp>
              <elementProp name="OrderId_MultipleSub" elementType="Argument">
                <stringProp name="Argument.name">OrderId_MultipleSub</stringProp>
                <stringProp name="Argument.value">H341780193</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">OrderId from TestData.jmx</stringProp>
              </elementProp>
              <elementProp name="SubId_fromMutipleSub" elementType="Argument">
                <stringProp name="Argument.name">SubId_fromMutipleSub</stringProp>
                <stringProp name="Argument.value">315</stringProp>
                <stringProp name="Argument.desc">SubscriptionId generated from TestData.jmx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="LicenseKey" elementType="Argument">
                <stringProp name="Argument.name">LicenseKey</stringProp>
                <stringProp name="Argument.value">6JGHYDDT4YUT</stringProp>
                <stringProp name="Argument.desc">Hardcoded for GETSubs, Same used in Sanity suite</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SubId_MultiplePaymentRecords" elementType="Argument">
                <stringProp name="Argument.name">SubId_MultiplePaymentRecords</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Timestamp_Old" elementType="Argument">
                <stringProp name="Argument.name">Timestamp_Old</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P-120D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Timestamp_Old_BRIM" elementType="Argument">
                <stringProp name="Argument.name">Timestamp_Old_BRIM</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P-120D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invoice_CreateDate" elementType="Argument">
                <stringProp name="Argument.name">Invoice_CreateDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invoice_SubscriptionEndDate" elementType="Argument">
                <stringProp name="Argument.name">Invoice_SubscriptionEndDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss,,P200D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invoice_Email" elementType="Argument">
                <stringProp name="Argument.name">Invoice_Email</stringProp>
                <stringProp name="Argument.value">gekkoqa_invoice_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PO_Number" elementType="Argument">
                <stringProp name="Argument.name">PO_Number</stringProp>
                <stringProp name="Argument.value">test${__Random(1,1000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PO_BPID" elementType="Argument">
                <stringProp name="Argument.name">PO_BPID</stringProp>
                <stringProp name="Argument.value">test${__Random(1,1000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_sku" elementType="Argument">
                <stringProp name="Argument.name">ext_sku</stringProp>
                <stringProp name="Argument.value">U33T3AHB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MLS_email" elementType="Argument">
                <stringProp name="Argument.name">MLS_email</stringProp>
                <stringProp name="Argument.value">gekkoqamls_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_wps" elementType="Argument">
                <stringProp name="Argument.name">Send_email_wps</stringProp>
                <stringProp name="Argument.value">gekko_wps_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_demo" elementType="Argument">
                <stringProp name="Argument.name">Send_email_demo</stringProp>
                <stringProp name="Argument.value">gekko_demo_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_sf" elementType="Argument">
                <stringProp name="Argument.name">Send_email_sf</stringProp>
                <stringProp name="Argument.value">gekko_sf_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_wex" elementType="Argument">
                <stringProp name="Argument.name">Send_email_wex</stringProp>
                <stringProp name="Argument.value">gekko_wex_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables_Cancel-Subscription" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="invalid-token" elementType="Argument">
                <stringProp name="Argument.name">invalid-token</stringProp>
                <stringProp name="Argument.value">hkgkjgjkgjkgkjgk</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invalid_HPID" elementType="Argument">
                <stringProp name="Argument.name">Invalid_HPID</stringProp>
                <stringProp name="Argument.value">..12-abc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Invalid_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">Invalid_Subscription_ID</stringProp>
                <stringProp name="Argument.value">..12-abcde</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="NotMapped_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">NotMapped_Subscription_ID</stringProp>
                <stringProp name="Argument.value">998</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_Date" elementType="Argument">
                <stringProp name="Argument.name">Cancel_Date</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">invalid_Subscription_ID</stringProp>
                <stringProp name="Argument.value">25</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_HPID" elementType="Argument">
                <stringProp name="Argument.name">invalid_HPID</stringProp>
                <stringProp name="Argument.value">P020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="invalid_CilentID" elementType="Argument">
                <stringProp name="Argument.name">invalid_CilentID</stringProp>
                <stringProp name="Argument.value">invalid_CilentID</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_EffectiveDate" elementType="Argument">
                <stringProp name="Argument.name">Cancel_EffectiveDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P59D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_EffectiveDate15D" elementType="Argument">
                <stringProp name="Argument.name">Cancel_EffectiveDate15D</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P15D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Cancel_EffectiveDate100D" elementType="Argument">
                <stringProp name="Argument.name">Cancel_EffectiveDate100D</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P100D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Paymment_Reminder_Date" elementType="Argument">
                <stringProp name="Argument.name">Paymment_Reminder_Date</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P5D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber3" elementType="Argument">
                <stringProp name="Argument.name">SrNumber3</stringProp>
                <stringProp name="Argument.value">SRDEVEV${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber4" elementType="Argument">
                <stringProp name="Argument.name">SrNumber4</stringProp>
                <stringProp name="Argument.value">SRDEVCF${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">localhost:8080/catalogs/price-plans</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables_Payment_History" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="invalid-token" elementType="Argument">
                <stringProp name="Argument.name">invalid-token</stringProp>
                <stringProp name="Argument.value">hkgkjgjkgjkgkjgk</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">12-ase</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_HPID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_HPID</stringProp>
                <stringProp name="Argument.value">HPID-940494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Subscription_ID</stringProp>
                <stringProp name="Argument.value">337</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Invalid_HPID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Invalid_HPID</stringProp>
                <stringProp name="Argument.value">..12-abc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Invalid_Subscription_ID" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Invalid_Subscription_ID</stringProp>
                <stringProp name="Argument.value">908933</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_HPID_10Rec" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_HPID_10Rec</stringProp>
                <stringProp name="Argument.value">HPID-940494</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Subscription_ID_10Rec" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Subscription_ID_10Rec</stringProp>
                <stringProp name="Argument.value">337</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo_0" elementType="Argument">
                <stringProp name="Argument.name">pageNo_0</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Payment_History_Subscription_ID_NoRec" elementType="Argument">
                <stringProp name="Argument.name">Payment_History_Subscription_ID_NoRec</stringProp>
                <stringProp name="Argument.value">989</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">localhost:8080/catalogs/price-plans</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables_DataParser_Argon" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="DP_OrderID" elementType="Argument">
                <stringProp name="Argument.name">DP_OrderID</stringProp>
                <stringProp name="Argument.value">${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Arg_OrderID" elementType="Argument">
                <stringProp name="Argument.name">Arg_OrderID</stringProp>
                <stringProp name="Argument.value">${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_Argon" elementType="Argument">
                <stringProp name="Argument.name">ClientID_Argon</stringProp>
                <stringProp name="Argument.value">A5W13NVtdxkk7pyQorsRdLd1DTAv2rk6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Secret_Argon" elementType="Argument">
                <stringProp name="Argument.name">Secret_Argon</stringProp>
                <stringProp name="Argument.value">7mrF8WHztMBriondSaYbxMWmLmzblGFk</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">0k0OBj5F04tF8txg86I3EJiKiB1c4gEY</stringProp>
              </elementProp>
              <elementProp name="tenant_id" elementType="Argument">
                <stringProp name="Argument.name">tenant_id</stringProp>
                <stringProp name="Argument.value">Tenant-${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="New_email" elementType="Argument">
                <stringProp name="Argument.name">New_email</stringProp>
                <stringProp name="Argument.value">Update_Argon${__timeShift(MMddHHmmss,,,,)}@YOPmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Country_Code" elementType="Argument">
                <stringProp name="Argument.name">Country_Code</stringProp>
                <stringProp name="Argument.value">${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="File_Type" elementType="Argument">
                <stringProp name="Argument.name">File_Type</stringProp>
                <stringProp name="Argument.value">${__Random(1,3,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">gekko-dev.tropos-rnd.com/commerce-controller/v1/customer/${id}/order</stringProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-Carepacks" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="CPOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPOrder_ID</stringProp>
                <stringProp name="Argument.value">${Environment}CP${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber" elementType="Argument">
                <stringProp name="Argument.name">SrNumber</stringProp>
                <stringProp name="Argument.value">SRDEV${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber2" elementType="Argument">
                <stringProp name="Argument.name">SrNumber2</stringProp>
                <stringProp name="Argument.value">SRDEVMT${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber1" elementType="Argument">
                <stringProp name="Argument.name">SrNumber1</stringProp>
                <stringProp name="Argument.value">SRDEVMO${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPFOOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPFOOrder_ID</stringProp>
                <stringProp name="Argument.value">CPFO${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumberFO" elementType="Argument">
                <stringProp name="Argument.name">SrNumberFO</stringProp>
                <stringProp name="Argument.value">SRFO${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPHWUpdateOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPHWUpdateOrder_ID</stringProp>
                <stringProp name="Argument.value">CPHWUp${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumberHWUpdate" elementType="Argument">
                <stringProp name="Argument.name">SrNumberHWUpdate</stringProp>
                <stringProp name="Argument.value">HW${__timeShift(YYMMddHHmm,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_cp" elementType="Argument">
                <stringProp name="Argument.name">Send_email_cp</stringProp>
                <stringProp name="Argument.value">gekko_cp_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Send_email_cpstd" elementType="Argument">
                <stringProp name="Argument.name">Send_email_cpstd</stringProp>
                <stringProp name="Argument.value">gekko_cpstd_dev@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPSTD_HW_SR_NO" elementType="Argument">
                <stringProp name="Argument.name">CPSTD_HW_SR_NO</stringProp>
                <stringProp name="Argument.value">HWSrNo${__timeShift(YYMMddHHmm,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPEVOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPEVOrder_ID</stringProp>
                <stringProp name="Argument.value">CPEV${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumberFO1" elementType="Argument">
                <stringProp name="Argument.name">SrNumberFO1</stringProp>
                <stringProp name="Argument.value">SRDEVFO${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber4" elementType="Argument">
                <stringProp name="Argument.name">SrNumber4</stringProp>
                <stringProp name="Argument.value">SRDEVCFE${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPCFEOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPCFEOrder_ID</stringProp>
                <stringProp name="Argument.value">CPCFE${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CurrentCancelDate" elementType="Argument">
                <stringProp name="Argument.name">CurrentCancelDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="EstimatedDeliveryDate" elementType="Argument">
                <stringProp name="Argument.name">EstimatedDeliveryDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P-60D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SrNumber5" elementType="Argument">
                <stringProp name="Argument.name">SrNumber5</stringProp>
                <stringProp name="Argument.value">SRDEVCWFE${__timeShift(MMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CPCWFEOrder_ID" elementType="Argument">
                <stringProp name="Argument.name">CPCWFEOrder_ID</stringProp>
                <stringProp name="Argument.value">CPCWFE${__timeShift(YYMMddHHmmss,,,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables-DSP" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ClientID_DSP" elementType="Argument">
                <stringProp name="Argument.name">ClientID_DSP</stringProp>
                <stringProp name="Argument.value">5bUOBTaCwYDxopcrgeLU2l96jD32CRSF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_DSP" elementType="Argument">
                <stringProp name="Argument.name">SecretID_DSP</stringProp>
                <stringProp name="Argument.value">TwClyIcxzHfqMaLOu5S8I6IhuAUtutHy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_DSP_Mock" elementType="Argument">
                <stringProp name="Argument.name">ClientID_DSP_Mock</stringProp>
                <stringProp name="Argument.value">6HnuYG7DrA4cyjVqUoksC0NvJ4GvhMAC</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_DSP_Mock" elementType="Argument">
                <stringProp name="Argument.name">SecretID_DSP_Mock</stringProp>
                <stringProp name="Argument.value">k4BUSN0ftI3v15EPriWxsFOFQoh1UC0f</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ClientID_DSP_Notification" elementType="Argument">
                <stringProp name="Argument.name">ClientID_DSP_Notification</stringProp>
                <stringProp name="Argument.value">q778sxCiAlxaJPRg2bNQt6uPQA3psZMy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SecretID_DSP_Notification" elementType="Argument">
                <stringProp name="Argument.name">SecretID_DSP_Notification</stringProp>
                <stringProp name="Argument.value">jz2vS8O593pIbyvY8YsuzYoJMX5CvPwk</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Production Monitoring - Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${CONFIG_PATH}/TestResults/${Report}.csv</stringProp>
        <stringProp name="TestPlan.comments"> **DISABLE: All Argon Testcases</stringProp>
      </ResultCollector>
      <hashTree/>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">500</stringProp>
      </ConstantTimer>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
